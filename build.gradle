//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility
plugins {
    id 'java'
    id "maven-publish"
    id 'net.minecrell.plugin-yml.bukkit' version '0.6.0'
}

group = 'me.adrigamer2950'
version = properties.get("version") + (
        project.hasProperty("BUILD_NUMBER") ?
                ("-DEV" + (
                        project.property("BUILD_NUMBER") == "0" ? "" : ("-b" + project.property("BUILD_NUMBER")))
                )
                : ""
)
description = properties.get("description")
author = properties.get("author")

if (project.hasProperty("NEXUS_USERNAME") && project.hasProperty("NEXUS_PASSWORD")) {
    java {
        withJavadocJar()
        withSourcesJar()
    }

    publishing {
        repositories {
            maven {
                def baseUrl = "https://repo.devadri.es/repository/"

                url = uri(
                        baseUrl + (project.hasProperty("BUILD_NUMBER") ? "dev" : "releases")
                )
                credentials {
                    username = project.property("NEXUS_USERNAME")
                    password = project.property("NEXUS_PASSWORD")
                }
            }
        }
        publications {
            maven(MavenPublication) {
                groupId = this.group
                artifactId = rootProject.name
                version = this.version

                from components.java

                pom {
                    name = rootProject.name
                    description = this.description
                    url = "https://github.com/Adrigamer2950/AdriAPI"

                    licenses {
                        license {
                            name = 'GPL-3.0'
                            url = 'https://www.gnu.org/licenses/gpl-3.0.html'
                        }
                    }

                    developers {
                        developer {
                            id = "Adrigamer2950"
                            name = "Adri"
                        }
                    }

                    scm {
                        url = "https://github.com/Adrigamer2950/AdriAPI"
                    }

                    issueManagement {
                        system = 'GitHub'
                        url = 'https://github.com/Adrigamer2950/AdriAPI/issues'
                    }
                }
            }
        }
    }
}

repositories {
    mavenCentral()
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        url = "https://repo.papermc.io/repository/maven-public/"
    }
}

dependencies {
    // JetBrains Annotations
    compileOnly "org.jetbrains:annotations:24.1.0"

    // Folia API
    //noinspection VulnerableLibrariesLocal
    compileOnly "dev.folia:folia-api:1.20.4-R0.1-SNAPSHOT"

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    // Ansi
    compileOnly 'org.fusesource.jansi:jansi:2.4.1'

    // Adventure API
    compileOnly "net.kyori:adventure-platform-bukkit:4.3.4"
    bukkitLibrary "net.kyori:adventure-platform-bukkit:4.3.4"
}

def targetJavaVersion = 17

tasks {
    tasks.withType(JavaCompile).configureEach {
        if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
            options.release = targetJavaVersion
            options.encoding = 'UTF-8'
        }
    }

    java {
        def javaVersion = JavaVersion.toVersion(targetJavaVersion)
        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion
        if (JavaVersion.current() < javaVersion) {
            toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
        }
    }

    bukkit {
        name = "AdriAPI"
        version = version
        main = "me.adrigamer2950.adriapi.AdriAPI"
        apiVersion = "1.18"
        author = author
        description = description
        website = "https://github.com/Adrigamer2950/AdriAPI"
        load = 'STARTUP'
        foliaSupported = true

        commands {
            adriapi {
                description = "Main command"
                usage = "/adriapi"
            }
        }
    }
}